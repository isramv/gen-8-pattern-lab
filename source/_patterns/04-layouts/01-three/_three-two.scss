[data-layout='layout__3_2'] {
  $layout: (
    'columns': susy-repeat(2),
    'gutters': 0,
  );

  > * {
    width: span(1, $layout);
  }

  > *:nth-child(3n + 1) {
    clear: both; // IE 11.
    float: left;
    margin-right: gutter($layout);
  }

  > *:nth-child(3n + 2) {
    float: right;
    margin-right: 0;
  }

  // Note: This code is usually in `components/layout/css/src/layout.scss`
  // which is shared across all layouts. However, this layout overrides the
  // default responsive behavior in favor of a fixed layout regardless of
  // screen size.

  // Flexbox enhancement
  @supports (display: flex) {
    align-items: stretch;
    display: flex;
    flex-flow: row wrap;
  }

  // Grid
  @supports (display: grid) {
    display: grid;
    grid-auto-rows: minmax($grid-row-min-height, auto);
    grid-gap: $grid-row-gap;
    grid-template-columns: repeat(2, 1fr);

    > * {
      grid-column: auto / span 1;
      margin-right: 0;
      width: auto;
    }
  }

  @include mq(sm) {
    $layout: (
      'columns': susy-repeat(3),
      'gutters': 0,
    );

    > * {
      width: span(1, $layout);
    }

    > *:nth-child(3n + 1),
    > *:nth-child(3n + 2) {
      clear: both; // IE 11.
      float: left;
      margin-right: gutter($layout);
    }

    > *:nth-child(3n + 3) {
      float: right;
      margin-right: 0;
    }

    @supports (display: grid) {
      grid-template-columns: repeat(3, 1fr);

      > * {
        grid-column: auto / span 1;
        margin-right: 0;
        width: auto;
      }
    }
  }
}
